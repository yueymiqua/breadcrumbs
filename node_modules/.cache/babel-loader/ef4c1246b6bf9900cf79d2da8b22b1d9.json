{"ast":null,"code":"import React from'react';import{Breadcrumbs as MUIBreadcrumbs,Typography,Link}from'@material-ui/core';import{withRouter}from'react-router';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Breadcrumbs=function Breadcrumbs(props){var history=props.history,pathname=props.location.pathname;var pathnames=pathname.split('/').filter(function(x){return x;});//x => x will filter out the empty string as it is considered \"undefined\" during a filter\nreturn/*#__PURE__*/_jsxs(MUIBreadcrumbs,{\"aria-label\":\"breadcrumb\",children:[pathnames.length>0?/*#__PURE__*/_jsx(Link,{onClick:function onClick(){return history.push('/');},children:\"Home\"}):/*#__PURE__*/_jsx(Typography,{children:\"Home\"}),pathnames.map(function(name,index){var routeTo=\"/\".concat(pathnames.slice(0,index+1).join('/'));var isLast=index===pathnames.length-1;return isLast?/*#__PURE__*/_jsxs(Typography,{children:[\" \",name,\" \"]},name):/*#__PURE__*/_jsx(Link,{onClick:function onClick(){return history.push(routeTo);},children:name},name);})]});};export default withRouter(Breadcrumbs);","map":{"version":3,"sources":["/Users/pierreyue/Desktop/breadcrumbs/src/Breadcrumbs.js"],"names":["React","Breadcrumbs","MUIBreadcrumbs","Typography","Link","withRouter","props","history","pathname","location","pathnames","split","filter","x","length","push","map","name","index","routeTo","slice","join","isLast"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,WAAW,GAAIC,CAAAA,cADjB,CAEEC,UAFF,CAGEC,IAHF,KAIQ,mBAJR,CAKA,OAASC,UAAT,KAA2B,cAA3B,C,wFAEA,GAAMJ,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACK,KAAD,CAAW,IACrBC,CAAAA,OADqB,CACgBD,KADhB,CACrBC,OADqB,CACCC,QADD,CACgBF,KADhB,CACZG,QADY,CACCD,QADD,CAE7B,GAAME,CAAAA,SAAS,CAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,EAAoBC,MAApB,CAA2B,SAAAC,CAAC,QAAIA,CAAAA,CAAJ,EAA5B,CAAlB,CAAsD;AACtD,mBACE,MAAC,cAAD,EAAgB,aAAW,YAA3B,WACIH,SAAS,CAACI,MAAV,CAAmB,CAAnB,cACE,KAAC,IAAD,EAAM,OAAO,CAAE,yBAAMP,CAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb,CAAN,EAAf,kBADF,cAEE,KAAC,UAAD,mBAHN,CAKGL,SAAS,CAACM,GAAV,CAAc,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC9B,GAAMC,CAAAA,OAAO,YAAOT,SAAS,CAACU,KAAV,CAAgB,CAAhB,CAAmBF,KAAK,CAAG,CAA3B,EAA8BG,IAA9B,CAAmC,GAAnC,CAAP,CAAb,CACA,GAAMC,CAAAA,MAAM,CAAGJ,KAAK,GAAKR,SAAS,CAACI,MAAV,CAAmB,CAA5C,CACA,MAAOQ,CAAAA,MAAM,cACN,MAAC,UAAD,gBAAyBL,IAAzB,OAAiBA,IAAjB,CADM,cAEN,KAAC,IAAD,EAAiB,OAAO,CAAE,yBAAMV,CAAAA,OAAO,CAACQ,IAAR,CAAaI,OAAb,CAAN,EAA1B,UAAwDF,IAAxD,EAAWA,IAAX,CAFP,CAGD,CANA,CALH,GADF,CAeD,CAlBD,CAoBA,cAAeZ,CAAAA,UAAU,CAACJ,WAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {\n  Breadcrumbs as MUIBreadcrumbs,\n  Typography, \n  Link\n } from '@material-ui/core';\nimport { withRouter } from 'react-router';\n\nconst Breadcrumbs = (props) => {\n  const { history, location : { pathname } } = props;\n  const pathnames = pathname.split('/').filter(x => x); //x => x will filter out the empty string as it is considered \"undefined\" during a filter\n  return (\n    <MUIBreadcrumbs aria-label=\"breadcrumb\">\n      { pathnames.length > 0\n        ? <Link onClick={() => history.push('/')}>Home</Link>\n        : <Typography>Home</Typography>\n      }\n      {pathnames.map((name, index) => {\n        const routeTo = `/${pathnames.slice(0, index + 1).join('/')}`;\n        const isLast = index === pathnames.length - 1;\n        return isLast\n            ? (<Typography key={name}> {name} </Typography>)\n            : (<Link key={name} onClick={() => history.push(routeTo)}>{name}</Link>)\n      })}\n    </MUIBreadcrumbs>\n  );\n}\n\nexport default withRouter(Breadcrumbs);\n"]},"metadata":{},"sourceType":"module"}